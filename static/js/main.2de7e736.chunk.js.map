{"version":3,"sources":["components/Town/Town.tsx","components/Weather/Weather.tsx","api_helpers.ts","components/Towns/Towns.tsx","components/ApiInfo/ApiInfo.tsx","lib/constants.ts","index.tsx","App.tsx"],"names":["Town","title","handleTown","id","type","value","String","className","onClick","Weather","town","weather","temp","pressure","humidity","windSpeed","scope","colSpan","API_KEY","window","atob","API_URL","getData","url","a","fetch","response","json","Towns","cities","useState","setTown","setWeather","event","currentTown","currentTarget","currentId","getWeather","townWeather","wind","speed","main","map","item","key","city","ApiInfo","href","target","rel","ReactDOM","render","document","getElementById"],"mappings":"4TASaA,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,GAAtB,OAC7B,4BACEC,KAAK,SACLC,MAAOJ,EACPE,GAAIG,OAAOH,GACXI,UAAU,iDACVC,QAASN,GAERD,KCRQQ,G,MAAqB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEvCC,EAIED,EAJFC,KACAC,EAGEF,EAHFE,SACAC,EAEEH,EAFFG,SACAC,EACEJ,EADFI,UAGF,OACE,oCACE,2BAAOR,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAIS,MAAM,MAAMC,QAAS,EAAGV,UAAU,qBAAqBG,KAG/D,+BACE,4BACE,wBAAIM,MAAM,MAAMT,UAAU,qBAA1B,eACA,sCAAQK,EAAR,YAEF,4BACE,wBAAII,MAAM,MAAMT,UAAU,qBAA1B,wBACA,sCAAQM,EAAR,UAEF,4BACE,wBAAIG,MAAM,MAAMT,UAAU,qBAA1B,YACA,sCAAQO,EAAR,QAEF,4BACE,wBAAIE,MAAM,MAAMT,UAAU,qBAA1B,cACA,sCAAQQ,EAAR,gBAEF,4BACE,wBAAIC,MAAM,MAAMT,UAAU,qBAA1B,kBACA,0CC5CNW,EAAUC,OAAOC,KAAK,gDAEfC,EAAO,6EAAyEH,EAAzE,QAEPI,EAAO,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACEC,MAAMF,GADR,cACfG,EADe,yBAGdA,EAASC,QAHK,2CAAH,sDCUPC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACtBC,mBAAS,QADa,mBACvCpB,EADuC,KACjCqB,EADiC,OAEhBD,qBAFgB,mBAEvCnB,EAFuC,KAE9BqB,EAF8B,KAKxC9B,EAAU,uCAAG,WAAO+B,GAAP,+BAAAT,EAAA,6DACXU,EAAcD,EAAME,cAAc9B,MAClC+B,EAAYH,EAAME,cAAchC,GAEtC4B,EAAQG,GAEFG,EAAa,WACjB,OAAOf,EAAQ,GAAD,OAAID,GAAJ,OAAce,KAPb,SAUSC,IAVT,OAUXC,EAVW,OAaRvB,EACLuB,EAAYC,KADdC,MAbe,EAoBbF,EAAYG,KAHd7B,EAjBe,EAiBfA,KACAC,EAlBe,EAkBfA,SACAC,EAnBe,EAmBfA,SAUFkB,EAPuB,CACrBpB,OACAC,WACAC,WACAC,cA1Be,4CAAH,sDAgChB,OACE,oCACGc,EAAOa,KACN,SAAAC,GAAI,OACF,kBAAC,EAAD,CACEC,IAAKD,EAAKxC,GACVF,MAAO0C,EAAKE,KACZ1C,GAAIwC,EAAKxC,GACTD,WAAYA,OAIjBS,GAAW,kBAAC,EAAD,CAASD,KAAMA,EAAMC,QAASA,MC5DnCmC,EAAc,kBACzB,yBAAKvC,UAAU,YACb,wCACA,4BACE,4BACG,SACD,uBACEwC,KAAK,qCACLC,OAAO,SACPC,IAAI,sBACJ1C,UAAU,kBAJZ,uCASF,4BACG,YACD,0BAAMA,UAAU,iBAAhB,cClBKsB,EAAiB,CAC5B,CACE1B,GAAI,OACJ0C,KAAM,QAER,CACE1C,GAAI,QACJ0C,KAAM,UAER,CACE1C,GAAI,QACJ0C,KAAM,aCTVK,IAASC,OACP,mBCCqB,kBACrB,yBAAK5C,UAAU,WACb,kBAAC,EAAD,MACA,wBAAIA,UAAU,aAAd,OACA,kBAAC,EAAD,CAAOsB,OAAQA,ODLjB,MACAuB,SAASC,eAAe,W","file":"static/js/main.2de7e736.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './Town.css';\n\ntype Props ={\n  title: string;\n  id: number;\n  handleTown: (event: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nexport const Town: FC<Props> = ({ title, handleTown, id }) => (\n  <button\n    type=\"button\"\n    value={title}\n    id={String(id)}\n    className=\"btn btn-outline-primary my_btn-outline-primary\"\n    onClick={handleTown}\n  >\n    {title}\n  </button>\n);\n","import React, { FC } from 'react';\nimport { WeatherInterface } from '../../lib/types';\nimport './Weather.css';\n\ntype Props = {\n  town: string;\n  weather: WeatherInterface;\n};\n\nexport const Weather: FC<Props> = ({ town, weather }) => {\n  const {\n    temp,\n    pressure,\n    humidity,\n    windSpeed,\n  } = weather;\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th scope=\"col\" colSpan={2} className=\"table__title_size\">{town}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Temperature</th>\n            <td>{`${temp} °C`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Atmospheric pressure</th>\n            <td>{`${pressure} hPa`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Humidity</th>\n            <td>{`${humidity} %`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Wind speed</th>\n            <td>{`${windSpeed} meter/sec`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Wind direction</th>\n            <td>°</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n","const API_KEY = window.atob('NjJjYjFhZmYxMjlmZmE1ZjAzNzRiNWJlNWZhZDkyNTY=');\n\nexport const API_URL = `https://api.openweathermap.org/data/2.5/weather?units=metric&appid=${API_KEY}&id=`;\n\nexport const getData = async <T>(url: string): Promise<T> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React, { FC, useState } from 'react';\nimport { Town } from '../Town/Town';\nimport { Weather } from '../Weather/Weather';\nimport {\n  City,\n  WeatherInterface,\n  TownWeather,\n} from '../../lib/types';\nimport { API_URL, getData } from '../../api_helpers';\n\ntype Props ={\n  cities: City[];\n};\n\nexport const Towns: FC<Props> = ({ cities }) => {\n  const [town, setTown] = useState('Kyiv');\n  const [weather, setWeather] = useState<WeatherInterface>();\n\n\n  const handleTown = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const currentTown = event.currentTarget.value;\n    const currentId = event.currentTarget.id;\n\n    setTown(currentTown);\n\n    const getWeather = (): Promise<TownWeather> => {\n      return getData(`${API_URL}${currentId}`);\n    };\n\n    const townWeather = await getWeather();\n\n    const {\n      speed: windSpeed,\n    } = townWeather.wind;\n\n    const {\n      temp,\n      pressure,\n      humidity,\n    } = townWeather.main;\n\n    const currentWeather = {\n      temp,\n      pressure,\n      humidity,\n      windSpeed,\n    };\n\n    setWeather(currentWeather);\n  };\n\n  return (\n    <>\n      {cities.map(\n        item => (\n          <Town\n            key={item.id}\n            title={item.city}\n            id={item.id}\n            handleTown={handleTown}\n          />\n        ),\n      )}\n      {weather && <Weather town={town} weather={weather} />}\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport '../../App.css';\n\nexport const ApiInfo: FC = () => (\n  <div className=\"api_info\">\n    <p>Api info:</p>\n    <ul>\n      <li>\n        {'Docs: '}\n        <a\n          href=\"https://openweathermap.org/current\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"api_info__link\"\n        >\n          https://openweathermap.org/current\n        </a>\n      </li>\n      <li>\n        {'Api key: '}\n        <span className=\"api_info__key\">\n          hidden\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n","import { City } from './types';\n\nexport const cities: City[] = [\n  {\n    id: 703448,\n    city: 'Kyiv',\n  },\n  {\n    id: 2643743,\n    city: 'London',\n  },\n  {\n    id: 5128638,\n    city: 'New York',\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\nimport './App.css';\nimport { Towns } from './components/Towns/Towns';\nimport { ApiInfo } from './components/ApiInfo/ApiInfo';\nimport { cities } from './lib/constants';\n\nexport const App: FC = () => (\n  <div className=\"wrapper\">\n    <ApiInfo />\n    <h1 className=\"app_title\">APP</h1>\n    <Towns cities={cities} />\n  </div>\n);\n"],"sourceRoot":""}