{"version":3,"sources":["components/Town/Town.tsx","components/Weather/Weather.tsx","api_helpers.ts","components/Towns/Towns.tsx","App.tsx","index.tsx"],"names":["Town","title","handleTown","id","type","value","String","className","onClick","Weather","town","weather","temp","pressure","humidity","windSpeed","scope","colSpan","getData","url","a","fetch","response","json","Towns","cities","useState","setTown","setWeather","event","currentTown","currentTarget","currentId","getWeather","townWeather","wind","speed","main","map","item","key","city","hiddenApiKey","window","btoa","ReactDOM","render","href","target","document","getElementById"],"mappings":"6TASaA,G,MAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,GAAtB,OAC7B,oCACE,4BACEC,KAAK,SACLC,MAAOJ,EACPE,GAAIG,OAAOH,GACXI,UAAU,iDACVC,QAASN,GAERD,MCTMQ,G,MAAqB,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAEvCC,EAIED,EAJFC,KACAC,EAGEF,EAHFE,SACAC,EAEEH,EAFFG,SACAC,EACEJ,EADFI,UAGF,OACE,oCACE,2BAAOR,UAAU,SACf,2BAAOA,UAAU,eACf,4BACE,wBAAIS,MAAM,MAAMC,QAAS,EAAGV,UAAU,qBAAqBG,KAG/D,+BACE,4BACE,wBAAIM,MAAM,MAAMT,UAAU,qBAA1B,eACA,sCAAQK,EAAR,YAEF,4BACE,wBAAII,MAAM,MAAMT,UAAU,qBAA1B,wBACA,sCAAQM,EAAR,UAEF,4BACE,wBAAIG,MAAM,MAAMT,UAAU,qBAA1B,YACA,sCAAQO,EAAR,QAEF,4BACE,wBAAIE,MAAM,MAAMT,UAAU,qBAA1B,cACA,sCAAQQ,EAAR,gBAEF,4BACE,wBAAIC,MAAM,MAAMT,UAAU,qBAA1B,kBACA,0CC1CCW,EAAO,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACEC,MAAMF,GADR,cACfG,EADe,yBAGdA,EAASC,QAHK,2CAAH,sDCQPC,EAAmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACtBC,mBAAS,QADa,mBACvChB,EADuC,KACjCiB,EADiC,OAEhBD,qBAFgB,mBAEvCf,EAFuC,KAE9BiB,EAF8B,KAKxC1B,EAAU,uCAAG,WAAO2B,GAAP,+BAAAT,EAAA,6DACXU,EAAcD,EAAME,cAAc1B,MAClC2B,EAAYH,EAAME,cAAc5B,GAEtCwB,EAAQG,GAEFG,EAAa,WACjB,OAAOf,EAAQ,GAAD,ODtBG,0GCsBH,OAAcc,KAPb,SAUSC,IAVT,OAUXC,EAVW,OAaRnB,EACLmB,EAAYC,KADdC,MAbe,EAoBbF,EAAYG,KAHdzB,EAjBe,EAiBfA,KACAC,EAlBe,EAkBfA,SACAC,EAnBe,EAmBfA,SAUFc,EAPuB,CACrBhB,OACAC,WACAC,WACAC,cA1Be,4CAAH,sDAgChB,OACE,oCACGU,EAAOa,KACN,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMC,IAAKD,EAAKpC,GAAIF,MAAOsC,EAAKE,KAAMtC,GAAIoC,EAAKpC,GAAID,WAAYA,OAExES,GAAW,kBAAC,EAAD,CAASD,KAAMA,EAAMC,QAASA,MC7C1Cc,EAAiB,CACrB,CACEtB,GAAI,OACJsC,KAAM,QAER,CACEtC,GAAI,QACJsC,KAAM,UAER,CACEtC,GAAI,QACJsC,KAAM,aAIJC,EAAeC,OAAOC,KAAK,oCClBjCC,IAASC,OACP,mBDmBqB,WACrB,OACE,yBAAKvC,UAAU,WACb,yBAAKA,UAAU,YACb,wCACA,4BACE,4BACG,SACD,uBAAGwC,KAAK,qCAAqCC,OAAO,SAASzC,UAAU,kBAAvE,uCAIF,4BACG,YACD,0BAAMA,UAAU,iBACbmC,MAMT,wBAAInC,UAAU,aAAd,OACA,kBAAC,EAAD,CAAOkB,OAAQA,OCzCnB,MACAwB,SAASC,eAAe,W","file":"static/js/main.4652e566.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport './Town.css';\n\ntype Props ={\n  title: string;\n  id: number;\n  handleTown: (event: React.MouseEvent<HTMLButtonElement>) => void;\n};\n\nexport const Town: FC<Props> = ({ title, handleTown, id }) => (\n  <>\n    <button\n      type=\"button\"\n      value={title}\n      id={String(id)}\n      className=\"btn btn-outline-primary my_btn-outline-primary\"\n      onClick={handleTown}\n    >\n      {title}\n    </button>\n  </>\n);\n","import React, { FC } from 'react';\nimport { WeatherInterface } from '../../types';\nimport './Weather.css';\n\ntype Props = {\n  town: string;\n  weather: WeatherInterface;\n};\n\nexport const Weather: FC<Props> = ({ town, weather }) => {\n  const {\n    temp,\n    pressure,\n    humidity,\n    windSpeed,\n  } = weather;\n\n  return (\n    <>\n      <table className=\"table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th scope=\"col\" colSpan={2} className=\"table__title_size\">{town}</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Temperature</th>\n            <td>{`${temp} °C`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Atmospheric pressure</th>\n            <td>{`${pressure} hPa`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Humidity</th>\n            <td>{`${humidity} %`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Wind speed</th>\n            <td>{`${windSpeed} meter/sec`}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\" className=\"table__title_size\">Wind direction</th>\n            <td>°</td>\n          </tr>\n        </tbody>\n      </table>\n    </>\n  );\n};\n","export const API_URL = 'http://api.openweathermap.org/data/2.5/weather?units=metric&appid=62cb1aff129ffa5f0374b5be5fad9256&id=';\n\nexport const getData = async (url: string) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React, { FC, useState } from 'react';\nimport { Town } from '../Town/Town';\nimport { Weather } from '../Weather/Weather';\nimport { City, WeatherInterface } from '../../types';\nimport { API_URL, getData } from '../../api_helpers';\n\ntype Props ={\n  cities: City[];\n};\n\nexport const Towns: FC<Props> = ({ cities }) => {\n  const [town, setTown] = useState('Kyiv');\n  const [weather, setWeather] = useState<WeatherInterface>();\n\n\n  const handleTown = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    const currentTown = event.currentTarget.value;\n    const currentId = event.currentTarget.id;\n\n    setTown(currentTown);\n\n    const getWeather = () => {\n      return getData(`${API_URL}${currentId}`);\n    };\n\n    const townWeather = await getWeather();\n\n    const {\n      speed: windSpeed,\n    } = townWeather.wind;\n\n    const {\n      temp,\n      pressure,\n      humidity,\n    } = townWeather.main;\n\n    const currentWeather = {\n      temp,\n      pressure,\n      humidity,\n      windSpeed,\n    };\n\n    setWeather(currentWeather);\n  };\n\n  return (\n    <>\n      {cities.map(\n        item => <Town key={item.id} title={item.city} id={item.id} handleTown={handleTown} />,\n      )}\n      {weather && <Weather town={town} weather={weather} />}\n    </>\n  );\n};\n","/* eslint-disable react/jsx-no-target-blank */\nimport React, { FC } from 'react';\nimport './App.css';\nimport { Towns } from './components/Towns/Towns';\nimport { City } from './types';\n\n\nconst cities: City[] = [\n  {\n    id: 703448,\n    city: 'Kyiv',\n  },\n  {\n    id: 2643743,\n    city: 'London',\n  },\n  {\n    id: 5128638,\n    city: 'New York',\n  },\n];\n\nconst hiddenApiKey = window.btoa('62cb1aff129ffa5f0374b5be5fad9256');\n\nexport const App: FC = () => {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"api_info\">\n        <p>Api info:</p>\n        <ul>\n          <li>\n            {'Docs: '}\n            <a href=\"https://openweathermap.org/current\" target=\"_blank\" className=\"api_info__link\">\n            https://openweathermap.org/current\n            </a>\n          </li>\n          <li>\n            {'Api key: '}\n            <span className=\"api_info__key\">\n              {hiddenApiKey}\n            </span>\n          </li>\n        </ul>\n      </div>\n\n      <h1 className=\"app_title\">APP</h1>\n      <Towns cities={cities} />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}